<?php
error_reporting(E_ALL);

/**
 * Category
 * 
 * @package MagentoAPI
 * @author Remzi Zaimi
 * @copyright 2014
 * @version $Id$
 * @access public
 */
class Category extends Controller {
    
    /**
     * Category::__construct()
     * 
     * @return void
     */
    function __construct() {
        parent::__construct();
    }
    /**
     * Desc: with this function we import categories into Magento, please remember that when you import Categories, you get back
     * category id generated by Magento and in the end of the function we insert it into table test.tbl_magentoKategorie,
     * both IDs from Wawi and Magento. I use this Magento ID for importing Articles.
     * 
     * Category::exportCategories()
     * 
     * @param integer $i_languageId, 1 is for german language, 99 for english language
     * @param integer $i_shop, 1 = for FR shop and 3 for UK shop
     * @param bool $b_mainCategory, if you set true, you will import main categories else sub/sub.
     * @param integer $i_level, set the level of the categories, ex:main, sub, and sub-sub
     * @return void
     */
    function exportCategories($i_languageId=null, $i_shop=null, $b_mainCategory=true, $i_level=3) {
        if(!isset($i_languageId)) {die('please set the language id.');}
        if(!isset($i_shop)) {die('please set the shop id.');}
        
        $i_rootCategory = 0;
        $i_shop == 1 ? $i_rootCategory =2 : $i_rootCategory =1319;

        $categoryModel = $this->loadModel('CategoryModel');

        $a_Categories = $categoryModel->getCategories($i_languageId, $i_shop, $b_mainCategory);

        $a_Category = array();
        $a_newCategoryID = array();
        foreach($a_Categories as $category)
        {
            $i_parentOfParent = $categoryModel->getParentOfParentId($category['ParentOfParent'],$i_shop);
            $a_Category = array(
                'name' => trim($category['Name']),
                'is_active' => 1,
                'available_sort_by' => false,
                'custom_design' => null,
                'custom_apply_to_products' => null,
                'custom_design_from' => null,
                'custom_design_to' => null,
                'custom_layout_update' => null,
                'default_sort_by' => false,
                'description' => $category['Short_Description'],
                'seo_description' => $category['Long_Description'],
                'display_mode' => null,
                'is_anchor' => 1,
                'landing_page' => null,
                'meta_description' => $category['Meta_Description'],
                'meta_keywords' => $category['Keywords'],
                'meta_title' => $category['Title_Tag'],
                #'page_layout' => 'two_columns_left',
                #'url_key' => $category['Url'],
                'include_in_menu' => 1,
                #'category_id ' => $category['Kat_id'],
                'parent_id' => ($b_mainCategory==true?$i_rootCategory:$category['Parent_id']),
                'level' => $i_level,
                'path' => "1/$i_rootCategory".($b_mainCategory==true?'':($i_parentOfParent[0]['magentoCatId']==false?'':'/'.$i_parentOfParent[0]['magentoCatId']).'/'.$category['Parent_id'])
                            
            );
            
            $a_newCategoryID[$category['Kat_id']] = $this->oAPI->setCategory(1,$a_Category);
            if (!$a_newCategoryID) {
                echo $this->oAPI->errorCode . ':' . $this->oAPI->error;
            }     
        }

        foreach($a_newCategoryID as $a=>$b)
        {
            $sql = "INSERT INTO test.tbl_magentoCategory (magentoCatId,wawiCatId,level,shop) VALUES ($b,$a,".($b_mainCategory==true?1:2).",$i_shop)";
            #echo $sql;
            $a_result = $this->oMySQL->executeSQL($sql);
            #print_r($a_result);
        }
                
    }
    /**
     * Please run these two sql queries after the update
     *   UPDATE catalog_category_entity SET level =
     *   (SELECT LENGTH(path)-LENGTH(REPLACE(path,'/','')) AS tmpl
     *   FROM (SELECT * FROM catalog_category_entity) AS table1
     *   WHERE catalog_category_entity.entity_id = table1.entity_id);
     *   UPDATE catalog_category_entity SET children_count =
     *   (SELECT COUNT(*) FROM
     *   (SELECT * FROM catalog_category_entity) AS table2
     *   WHERE path LIKE
     *   CONCAT(catalog_category_entity.path,"/%")); 
     *
     * Category::updateCategories()
     * 
     * @param integer $i_languageId, 1 is for german language, 99 for english language
     * @param integer $i_shop, 1 = for FR shop and 3 for UK shop
     * @param bool $b_mainCategory, if you set true, you will import main categories else sub/sub.
     * @param integer $i_level, set the level of the categories, ex:main, sub, and sub-sub
     * @return void
     */
    function updateCategories($i_languageId=null, $i_shop=null, $b_mainCategory=false, $i_level=3) {
        if(!isset($i_languageId)) {die('please set the language id.');}
        if(!isset($i_shop)) {die('please set the shop id.');}

        $i_rootCategory = 0;
        $i_shop == 1 ? $i_rootCategory =2 : $i_rootCategory =1319;

        $categoryModel = $this->loadModel('CategoryModel');

        $a_Categories = $categoryModel->getCategories($i_languageId, $i_shop, $b_mainCategory);
        
        $a_Category = array();
        $a_newCategoryID = array();
        foreach($a_Categories as $category)
        {
            $a_Category = array(
                'name' => trim($category['Name']),
                'is_active' => 1,
                'available_sort_by' => false,
                'custom_design' => null,
                'custom_apply_to_products' => null,
                'custom_design_from' => null,
                'custom_design_to' => null,
                'custom_layout_update' => null,
                'default_sort_by' => false,
                'description' => $category['Short_Description'],
                'seo_description' => $category['Long_Description'],
                'display_mode' => null,
                'is_anchor' => 1,
                'landing_page' => null,
                'meta_description' => $category['Meta_Description'],
                'meta_keywords' => $category['Keywords'],
                'meta_title' => $category['Title_Tag'],
                #'url_key' => $category['Url'],
                'include_in_menu' => 1,
                'parent_id' => ($b_mainCategory==true?$i_rootCategory:$category['Parent_id']),
                'level' => $i_level,
            );
            
            $a = $this->oAPI->updateCatagories(array($category['Magento_id'],$a_Category));
            if (!$a) {
                echo $this->oAPI->errorCode . ':' . $this->oAPI->error;
                echo $category['Magento_id'];
                echo '<br>';
            }   
        }
                
    }
    /**
     * Please run these two sql queries after the update
     *   UPDATE catalog_category_entity SET level =
     *   (SELECT LENGTH(path)-LENGTH(REPLACE(path,'/','')) AS tmpl
     *   FROM (SELECT * FROM catalog_category_entity) AS table1
     *   WHERE catalog_category_entity.entity_id = table1.entity_id);
     *   UPDATE catalog_category_entity SET children_count =
     *   (SELECT COUNT(*) FROM
     *   (SELECT * FROM catalog_category_entity) AS table2
     *   WHERE path LIKE
     *   CONCAT(catalog_category_entity.path,"/%")); 
     *
     * Category::updateCategories()
     * 
     * @param integer $i_languageId, 1 is for german language, 99 for english language
     * @param integer $i_shop, 1 = for FR shop and 3 for UK shop
     * @param bool $b_mainCategory, if you set true, you will import main categories else sub/sub.
     * @param integer $i_level, set the level of the categories, ex:main, sub, and sub-sub
     * @return void
     */
    function newCategories($i_languageId=null, $i_shop=null, $b_mainCategory=false, $i_level=3) {
        if(!isset($i_languageId)) {die('please set the language id.');}
        if(!isset($i_shop)) {die('please set the shop id.');}
        
        $i_rootCategory = 0;
        $i_shop == 1 ? $i_rootCategory =2 : $i_rootCategory =1319;

        $categoryModel = $this->loadModel('CategoryModel');

        $a_Categories = $categoryModel->getNewCategories($i_languageId, $i_shop, $b_mainCategory);

        $a_Category = array();
        $a_newCategoryID = array();
        foreach($a_Categories as $category)
        {
            $i_parentOfParent = $categoryModel->getParentOfParentId($category['ParentOfParent'],$i_shop);
            $a_Category = array(
                'name' => trim($category['Name']),
                'is_active' => 1,
                'available_sort_by' => false,
                'custom_design' => null,
                'custom_apply_to_products' => null,
                'custom_design_from' => null,
                'custom_design_to' => null,
                'custom_layout_update' => null,
                'default_sort_by' => false,
                'description' => $category['Short_Description'],
                'seo_description' => $category['Long_Description'],
                'display_mode' => null,
                'is_anchor' => 1,
                'landing_page' => null,
                'meta_description' => $category['Meta_Description'],
                'meta_keywords' => $category['Keywords'],
                'meta_title' => $category['Title_Tag'],
                #'page_layout' => 'two_columns_left',
                #'url_key' => $category['Url'],
                'include_in_menu' => 1,
                #'category_id ' => $category['Kat_id'],
                'parent_id' => ($b_mainCategory==true?$i_rootCategory:$category['Parent_id']),
                'level' => $i_level,
                'path' => "1/$i_rootCategory".($b_mainCategory==true?'':($i_parentOfParent[0]['magentoCatId']==false?'':'/'.$i_parentOfParent[0]['magentoCatId']).'/'.$category['Parent_id'])
                            
            );
            
            $a_newCategoryID[$category['Kat_id']] = $this->oAPI->setCategory(1,$a_Category);
            if (!$a_newCategoryID) {
                echo $this->oAPI->errorCode . ':' . $this->oAPI->error;
            }     
        }

        foreach($a_newCategoryID as $a=>$b)
        {
            $sql = "INSERT INTO test.tbl_magentoCategory (magentoCatId,wawiCatId,level,shop) VALUES ($b,$a,".($b_mainCategory==true?1:2).",$i_shop)";
            #echo $sql;
            $a_result = $this->oMySQL->executeSQL($sql);
            #print_r($a_result);
        }
                
    }
    /**
     *
     * 
     * Category::exportBrands()
     * 
     * @param integer $i_languageId, 1 is for german language, 99 for english language
     * @param integer $i_shop, 1 = for FR shop and 3 for UK shop
     * @return void
     */
    function exportBrands($i_languageId=null, $i_shop=null) {
        if(!isset($i_languageId)) {die('please set the language id.');}
        if(!isset($i_shop)) {die('please set the shop id.');}
        
        $i_rootCategory = 0;

        $categoryModel = $this->loadModel('CategoryModel');

        $a_brands = $categoryModel->getBrands($i_languageId);

        $a_brand = array();
        $a_newCategoryID = array();
        foreach($a_brands as $brand)
        {
            $a_brand = array(
                'name' => trim($brand['marke_name']),
                'is_active' => 1,
                'available_sort_by' => false,
                'custom_design' => null,
                'custom_apply_to_products' => null,
                'custom_design_from' => null,
                'custom_design_to' => null,
                'custom_layout_update' => null,
                'default_sort_by' => false,
                'description' => $brand['marke_descriptions'],
                'seo_description' => null,
                'display_mode' => null,
                'is_anchor' => 1,
                'landing_page' => null,
                'meta_description' => $brand['marke_descriptions'],
                'meta_keywords' => $brand['marke_keywords'],
                'meta_title' => $brand['marke_titletag'],
                #'page_layout' => 'two_columns_left',
                #'url_key' => $category['Url'],
                'include_in_menu' => 0,
                #'category_id ' => $category['Kat_id'],
                'parent_id' => ($i_shop == 1 ? 2 : 1319),
                'level' => 2,
                            
            );
            
            $a_newCategoryID[$brand['marke_id']] = $this->oAPI->setCategory(1,$a_brand);
            if (!$a_newCategoryID) {
                echo $this->oAPI->errorCode . ':' . $this->oAPI->error;
            }     
        }

        foreach($a_newCategoryID as $a=>$b)
        {
            $sql = "INSERT INTO test.tbl_magentoCategory (magentoCatId,wawiCatId,level,shop) VALUES ($b,$a,1,$i_shop)";
            #echo $sql;
            $a_result = $this->oMySQL->executeSQL($sql);
            #print_r($a_result);
        }
                
    }

    function importCategory() {

             $a_Category = array(
            'name' => 'New Category 3',
            'is_active' => 1,
            'available_sort_by' => array('position'),
            'custom_design' => null,
            'custom_apply_to_products' => null,
            'custom_design_from' => null,
            'custom_design_to' => null,
            'custom_layout_update' => null,
            'default_sort_by' => 'position',
            'description' => 'Jago Category Description',
            'display_mode' => null,
            'is_anchor' => 0,
            'landing_page' => null,
            'meta_description' => 'Jago Category Description',
            'meta_keywords' => 'Jago Category keywords',
            'meta_title' => 'Jago Category',
            'image' => 'wohnen_cat_bild.jpg',
            #'page_layout' => 'two_columns_left',
            'url_key' => 'new-category',
            'include_in_menu' => 1,
            #'category_id ' => $category['Kat_id'],
            'parent_id' => '1',
            'level' => '3',
            'path' => '1/2/1080/1118'

        );
       $a = $this->oAPI->setCategory(1,$a_Category);
        echo $a;

    }
    /**
     *
     * @param string $str
     * @param array $options
     * @return string
     */
    function seoUrl($str, $options = array())
    {
        // Make sure string is in UTF-8 and strip invalid UTF-8 characters
        $str = mb_convert_encoding((string )$str, 'UTF-8', mb_list_encodings());
        $defaults = array('delimiter' => '-', 'limit' => null, 'lowercase' => true,
            'replacements' => array(), 'transliterate' => true, );
        // Merge options
        $options = array_merge($defaults, $options);
        $char_map = array( 
            'À' => 'A', 'Á' => 'A', 'Â' => 'A', 'Ã' => 'A', 'Ä' => 'AE', 'Å' => 'A', 'Æ' =>
            'AE', 'Ç' => 'C', 'È' => 'E', 'É' => 'E', 'Ê' => 'E', 'Ë' => 'E', 'Ì' => 'I',
            'Í' => 'I', 'Î' => 'I', 'Ï' => 'I', 'Ð' => 'D', 'Ñ' => 'N', 'Ò' => 'O', 'Ó' =>
            'O', 'Ô' => 'O', 'Õ' => 'O', 'Ö' => 'OE', 'Ő' => 'O', 'Ø' => 'O', 'Ù' => 'U', 'Ú' =>
            'U', 'Û' => 'U', 'Ü' => 'UE', 'Ű' => 'U', 'Ý' => 'Y', 'Þ' => 'TH', 'ß' => 'ss',
            'à' => 'a', 'á' => 'a', 'â' => 'a', 'ã' => 'a', 'ä' => 'ae', 'å' => 'a', 'æ' =>
            'ae', 'ç' => 'c', 'è' => 'e', 'é' => 'e', 'ê' => 'e', 'ë' => 'e', 'ì' => 'i',
            'í' => 'i', 'î' => 'i', 'ï' => 'i', 'ð' => 'd', 'ñ' => 'n', 'ò' => 'o', 'ó' =>
            'o', 'ô' => 'o', 'õ' => 'o', 'ö' => 'oe', 'ő' => 'o', 'ø' => 'o', 'ù' => 'u', 'ú' =>
            'u', 'û' => 'u', 'ü' => 'ue', 'ű' => 'u', 'ý' => 'y', 'þ' => 'th', 'ÿ' => 'y',
            // Latin symbols
            '©' => '(c)' 
            
             );
        // Make custom replacements
        $str = preg_replace(array_keys($options['replacements']), $options['replacements'],
            $str);
        // Transliterate characters to ASCII
        if ($options['transliterate'])
        {
            $str = str_replace(array_keys($char_map), $char_map, $str);
        }
        // Replace non-alphanumeric characters with our delimiter
        $str = preg_replace('/[^\p{L}\p{Nd}]+/u', $options['delimiter'], $str);
        // Remove duplicate delimiters
        $str = preg_replace('/(' . preg_quote($options['delimiter'], '/') . '){2,}/',
            '$1', $str);
        // Truncate slug to max. characters
        $str = mb_substr($str, 0, ($options['limit'] ? $options['limit'] : mb_strlen($str,
            'UTF-8')), 'UTF-8');
        // Remove delimiter from ends
        $str = trim($str, $options['delimiter']);
        return $options['lowercase'] ? mb_strtolower($str, 'UTF-8') : $str;
    }

    function debug()
    {
        $categoryModel = $this->loadModel('CategoryModel');

        $a_Categories = $categoryModel->debug();
        print_r($a_Categories);
    }
    
}

?>
